from html import escape
from typing import List
from app.database.models import Category


def two_cols(categories: List[Category], col_width: int = 25) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è Telegram.
    
    Args:
        categories: –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        col_width: –®–∏—Ä–∏–Ω–∞ –ª–µ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20)
    
    Returns:
        –°—Ç—Ä–æ–∫–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <pre>...</pre> –¥–ª—è HTML
    
    Example:
        üí≥ –í–æ–∑–≤—Ä–∞—Ç              üéÅ –ü–æ–¥–∞—Ä–æ–∫
        üíº –ó–∞—Ä–ø–ª–∞—Ç–∞            üí∞ –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞
    """
    if not categories:
        return ""
    
    lines = []
    # –ò–¥—ë–º –ø–æ –ø–∞—Ä–∞–º: 0-1, 2-3, 4-5 ...
    for i in range(0, len(categories), 2):
        left = f"{categories[i].icon} {categories[i].name}"
        right = (
            f"{categories[i+1].icon} {categories[i+1].name}"
            if i + 1 < len(categories) else ""
        )
        
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        left = escape(left)
        right = escape(right)
        
        # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ª–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤—ã–π
        lines.append(f"{left.ljust(col_width)}{right}")
    
    return "<code>" + "\n".join(lines) + "</code>"


def format_categories_text(income_categories: List[Category], expense_categories: List[Category]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ –≤—Å–µ–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        income_categories: –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤
        expense_categories: –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤
    
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    """
    text = "üìä <b>–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>\n\n"
    
    if income_categories:
        text += "üí∞ <b>–î–æ—Ö–æ–¥—ã:</b>\n"
        text += two_cols(income_categories) + "\n\n"
    
    if expense_categories:
        text += "üí∏ <b>–†–∞—Å—Ö–æ–¥—ã:</b>\n"
        text += two_cols(expense_categories)
    
    return text


def format_amount(amount: float, currency: str = "‚ÇΩ") -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    
    Args:
        amount: –°—É–º–º–∞
        currency: –í–∞–ª—é—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É–±–ª–∏)
    
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Å—É–º–º–æ–π
    
    Example:
        1234.56 -> "1 234,56 ‚ÇΩ"
    """
    return f"{amount:,.2f} {currency}".replace(",", " ").replace(".", ",")