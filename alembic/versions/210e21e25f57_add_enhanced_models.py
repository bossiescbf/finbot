"""add_enhanced_models

Revision ID: 210e21e25f57
Revises: b2b63f9d3144
Create Date: 2025-07-27 09:08:53.186018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '210e21e25f57'
down_revision: Union[str, Sequence[str], None] = 'b2b63f9d3144'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('icon', sa.String(length=10), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_income', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_user_id'), 'categories', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_data', sa.Text(), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('limit_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('period', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budgets_category_id'), 'budgets', ['category_id'], unique=False)
    op.create_index(op.f('ix_budgets_id'), 'budgets', ['id'], unique=False)
    op.create_index(op.f('ix_budgets_user_id'), 'budgets', ['user_id'], unique=False)
    op.add_column('operations', sa.Column('category_id', sa.Integer(), nullable=True))
    op.add_column('operations', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('operations', sa.Column('is_recurring', sa.Boolean(), nullable=False))
    op.add_column('operations', sa.Column('recurring_period', sa.String(length=20), nullable=True))
    op.add_column('operations', sa.Column('tags', sa.Text(), nullable=True))
    op.add_column('operations', sa.Column('location', sa.Text(), nullable=True))
    op.add_column('operations', sa.Column('receipt_url', sa.Text(), nullable=True))
    op.create_index(op.f('ix_operations_category_id'), 'operations', ['category_id'], unique=False)
    op.create_foreign_key(None, 'operations', 'categories', ['category_id'], ['id'], ondelete='SET NULL')
    op.drop_column('operations', 'category')
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('timezone', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('currency', sa.String(length=3), nullable=False))
    op.add_column('users', sa.Column('notification_enabled', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('daily_limit', sa.Numeric(precision=12, scale=2), nullable=True))
    op.add_column('users', sa.Column('monthly_limit', sa.Numeric(precision=12, scale=2), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'monthly_limit')
    op.drop_column('users', 'daily_limit')
    op.drop_column('users', 'notification_enabled')
    op.drop_column('users', 'currency')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'is_active')
    op.add_column('operations', sa.Column('category', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'operations', type_='foreignkey')
    op.drop_index(op.f('ix_operations_category_id'), table_name='operations')
    op.drop_column('operations', 'receipt_url')
    op.drop_column('operations', 'location')
    op.drop_column('operations', 'tags')
    op.drop_column('operations', 'recurring_period')
    op.drop_column('operations', 'is_recurring')
    op.drop_column('operations', 'updated_at')
    op.drop_column('operations', 'category_id')
    op.drop_index(op.f('ix_budgets_user_id'), table_name='budgets')
    op.drop_index(op.f('ix_budgets_id'), table_name='budgets')
    op.drop_index(op.f('ix_budgets_category_id'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_categories_user_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
